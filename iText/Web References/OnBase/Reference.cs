//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace iText.OnBase {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OnBaseServiceSoap", Namespace="http://com.cjs.onbaseservice")]
    public partial class OnBaseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBase64DocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBase64DocumentsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OnBaseService() {
            this.Url = global::iText.Properties.Settings.Default.iText_OnBase_OnBaseService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetBase64DocumentCompletedEventHandler GetBase64DocumentCompleted;
        
        /// <remarks/>
        public event GetBase64DocumentsCompletedEventHandler GetBase64DocumentsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.cjs.onbaseservice/GetBase64Document", RequestNamespace="http://com.cjs.onbaseservice", ResponseNamespace="http://com.cjs.onbaseservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBase64Document(string systemId, string dktId, string userName, string password) {
            object[] results = this.Invoke("GetBase64Document", new object[] {
                        systemId,
                        dktId,
                        userName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBase64DocumentAsync(string systemId, string dktId, string userName, string password) {
            this.GetBase64DocumentAsync(systemId, dktId, userName, password, null);
        }
        
        /// <remarks/>
        public void GetBase64DocumentAsync(string systemId, string dktId, string userName, string password, object userState) {
            if ((this.GetBase64DocumentOperationCompleted == null)) {
                this.GetBase64DocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBase64DocumentOperationCompleted);
            }
            this.InvokeAsync("GetBase64Document", new object[] {
                        systemId,
                        dktId,
                        userName,
                        password}, this.GetBase64DocumentOperationCompleted, userState);
        }
        
        private void OnGetBase64DocumentOperationCompleted(object arg) {
            if ((this.GetBase64DocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBase64DocumentCompleted(this, new GetBase64DocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://com.cjs.onbaseservice/GetBase64Documents", RequestNamespace="http://com.cjs.onbaseservice", ResponseNamespace="http://com.cjs.onbaseservice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnDocResponse GetBase64Documents(Parameter[] Parameters, string Username, string Password) {
            object[] results = this.Invoke("GetBase64Documents", new object[] {
                        Parameters,
                        Username,
                        Password});
            return ((ReturnDocResponse)(results[0]));
        }
        
        /// <remarks/>
        public void GetBase64DocumentsAsync(Parameter[] Parameters, string Username, string Password) {
            this.GetBase64DocumentsAsync(Parameters, Username, Password, null);
        }
        
        /// <remarks/>
        public void GetBase64DocumentsAsync(Parameter[] Parameters, string Username, string Password, object userState) {
            if ((this.GetBase64DocumentsOperationCompleted == null)) {
                this.GetBase64DocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBase64DocumentsOperationCompleted);
            }
            this.InvokeAsync("GetBase64Documents", new object[] {
                        Parameters,
                        Username,
                        Password}, this.GetBase64DocumentsOperationCompleted, userState);
        }
        
        private void OnGetBase64DocumentsOperationCompleted(object arg) {
            if ((this.GetBase64DocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBase64DocumentsCompleted(this, new GetBase64DocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.cjs.onbaseservice")]
    public partial class Parameter {
        
        private PARAM_NAMES parameterNameField;
        
        private string parameterValueField;
        
        /// <remarks/>
        public PARAM_NAMES ParameterName {
            get {
                return this.parameterNameField;
            }
            set {
                this.parameterNameField = value;
            }
        }
        
        /// <remarks/>
        public string ParameterValue {
            get {
                return this.parameterValueField;
            }
            set {
                this.parameterValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.cjs.onbaseservice")]
    public enum PARAM_NAMES {
        
        /// <remarks/>
        CaseId,
        
        /// <remarks/>
        SystemId,
        
        /// <remarks/>
        DocketId,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.cjs.onbaseservice")]
    public partial class ReturnDoc {
        
        private int indexField;
        
        private string base64DocumentField;
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public string Base64Document {
            get {
                return this.base64DocumentField;
            }
            set {
                this.base64DocumentField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://com.cjs.onbaseservice")]
    public partial class ReturnDocResponse {
        
        private string statusField;
        
        private string messageField;
        
        private ReturnDoc[] returnDocsField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public ReturnDoc[] ReturnDocs {
            get {
                return this.returnDocsField;
            }
            set {
                this.returnDocsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBase64DocumentCompletedEventHandler(object sender, GetBase64DocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBase64DocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBase64DocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBase64DocumentsCompletedEventHandler(object sender, GetBase64DocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBase64DocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBase64DocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnDocResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnDocResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591